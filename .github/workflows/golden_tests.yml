name: Flutter Golden Tests

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  golden_tests:
    name: Golden Tests
    runs-on: ubuntu-latest
    continue-on-error: true # Don't fail the build if golden tests fail
    steps:
      - uses: actions/checkout@v4

      - name: Extract Flutter version
        id: flutter-version
        run: |
          FLUTTER_CONSTRAINT=$(awk '/environment:/,/^$/{if(/sdk: flutter/){print $NF}}' pubspec.yaml | tr -d \'\"')
          FLUTTER_VERSION=$(echo $FLUTTER_CONSTRAINT | grep -oE '[0-9]+\.[0-9]+\.[0-9]+' | head -n 1)
          if [ -z "$FLUTTER_VERSION" ]; then
            FLUTTER_VERSION="latest"
          fi
          echo "FLUTTER_VERSION=$FLUTTER_VERSION" >> $GITHUB_OUTPUT

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ steps.flutter-version.outputs.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Install dependencies
        run: flutter pub get

      # First run to generate baseline golden files
      - name: Generate golden files
        run: flutter test --update-goldens --tags golden
        continue-on-error: true # Don't fail if there are no golden tests yet
      
      # Run tests to check for differences
      - name: Run golden tests
        id: golden-test-run
        run: |
          echo "Running golden tests to identify UI differences..."
          flutter test --tags golden || echo "::set-output name=has_differences::true"
      
      # Save golden files and failure images as artifacts
      - name: Upload golden test artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: golden-test-artifacts
          path: |
            test/**/goldens/*.png
            test/**/failures/*.png
          retention-days: 14
      
      # Generate report on differences
      - name: Generate golden test report
        if: steps.golden-test-run.outputs.has_differences == 'true'
        run: |
          echo "# Golden Test Results" > golden_test_report.md
          echo "## Generated on: $(date)" >> golden_test_report.md
          echo "## Golden Files:" >> golden_test_report.md
          find test -path "*/goldens/*.png" | sort >> golden_test_report.md
          echo -e "\n## Failure Images (Review required):" >> golden_test_report.md
          FAILURES=$(find test -path "*/failures/*.png" | sort)
          if [ -n "$FAILURES" ]; then
            echo "$FAILURES" >> golden_test_report.md
            echo -e "\n**⚠️ UI differences detected!** Please review the failure images." >> golden_test_report.md
          else
            echo "No UI differences detected." >> golden_test_report.md
          fi
      
      # Upload the report as an artifact
      - name: Upload golden test report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: golden-test-report
          path: golden_test_report.md
          retention-days: 14

      # Add a comment to the PR with the results
      - name: Comment on PR
        if: github.event_name == 'pull_request' && steps.golden-test-run.outputs.has_differences == 'true'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('golden_test_report.md', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## Golden Test Results\n\nUI differences detected in golden tests. Please review the [golden test artifacts](${process.env.GITHUB_SERVER_URL}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}) for details.`
            });