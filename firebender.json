{
  "rules": [
    "Always run dart fix --apply before flutter analyze to automatically fix issues",
    "Always make sure tests pass at the end",
    "always remove unused imports",
    "always remove unused local variables",
    "As a rule of thumb - if a widget is over 10 lines long give it its own file",
    "Always run ./scripts/check_before_commit.sh  to ensure all checks pass",
    "if check_before_commit.sh doesn't yet it exist please create it and make it run dart fix --apply before flutter analyze and dart format with 100 character line length and set it up as precommit hook",
    "Always capture all user prompts in AI prompts log files with accurate timestamps",
    "Always check git branch name and create/update AI prompts log files to match branch prefix",
    "For each new branch, create a fresh AI prompts log file with branch prefix (e.g., MEM-76_ai_prompts.log for branch MEM-76-feature-name)",
    "When updating AI prompts log, use system date command to get current timestamp: date '+%Y-%m-%d %I:%M:%S %p'",
    "Proceed immediately with any described plan without waiting for explicit confirmation from the user. Don't ask for permission or wait for a 'go ahead' or 'do it' response before implementing a solution you've proposed.",
    "This is a FLAVORED Flutter app - ALWAYS use main_development.dart as the entry point, never lib/main.dart",
    "CLIENT_ID environment variable is REQUIRED for all builds and app functionality",
    "Build debug APK with: flutter build apk --debug --target lib/main_development.dart --dart-define=CLIENT_ID=$CLIENT_ID",
    "Install app with: flutter install --debug --target lib/main_development.dart --dart-define=CLIENT_ID=$CLIENT_ID",
    "For running the app, refer to setup.md for proper environment variable configuration and use: flutter run --dart-define=CLIENT_ID=$MEMVERSE_CLIENT_ID --dart-define=POSTHOG_MEMVERSE_API_KEY=$POSTHOG_MEMVERSE_API_KEY --flavor development --target lib/main_development.dart",
    "Android requires development flavor for proper configuration - never run without --flavor development on Android",
    "For Maestro testing, refer to maestro_rules.txt for platform-specific guidance and common issues",
    "When working with Maestro tests, always ensure app is installed on device before running tests",
    "Use temporarily_ditl.md file to track progress and show green checkmarks for completed tasks",
    {
      "filePathMatches": "*.feature",
      "rules": [
        "Use gherkin syntax/templates from https://pub.dev/packages/bdd_widget_test ie Then I see {'1'} text"
      ]
    },
    {
      "filePathMatches": "maestro/**/*.yaml",
      "rules": [
        "Use launchApp without clearState/clearKeychain unless specifically testing fresh app state",
        "App package name is com.spiritflightapps.memverse",
        "Login validation messages are: 'Please enter your username' and 'Please enter your password'",
        "Always take screenshots before and after critical actions for debugging",
        "Use waitForAnimationToEnd after user interactions",
        "Refer to maestro_rules.txt for complete testing guidelines"
      ]
    },
    {
      "filePathMatches": "**/*_ai_prompts_and_responses.log",
      "rules": [
        "Name log files following branch naming pattern: if branch is named like 'MEM-44-feature-name', use 'MEM-44_ai_prompts_and_responses.log'",
        "If branch name doesn't match a ticket pattern, use date format like 'April08_2025_ai_prompts_and_responses.log'",
        "When recording user queries and responses, always include accurate timestamps using system time",
        "For each user query, use the format: **User Query** (yyyy-MM-dd HH:mm:ss): [query text]",
        "Calculate and record accurate durations for tasks by using the actual start and end times",
        "When recording timestamps, use `date '+%Y-%m-%d %H:%M:%S'` format for consistency",
        "Ensure total time in summary reflects actual elapsed time between first and last interactions",
        "Capture full text of all user prompts without omissions"
      ]
    },
    {
      "filePathMatches": "**/*_ai_prompts.log",
      "rules": [
        "Name log files following branch naming pattern: if branch is named like 'MEM-59-feature-name', use 'MEM-59_ai_prompts.log'",
        "If branch name doesn't match a ticket pattern, use date format like 'April08_2025_ai_prompts.log'",
        "When creating a new log file, determine if there is already a log file for the current branch",
        "If no log file exists for the current branch, create one using the branch name prefix",
        "For each user query, record the timestamp in the format: **User Query** (yyyy-MM-dd hh:mm:ss AM/PM): [query text]",
        "Use system date command (`date '+%Y-%m-%d %I:%M:%S %p'`) to get accurate timestamps in AM/PM format for each entry",
        "After each user prompt, immediately update the log file with the current timestamp and full prompt text",
        "Calculate and record accurate durations for tasks using the actual start and end times",
        "Include a summary section with total time and key accomplishments",
        "Always capture the complete text of user prompts, including URLs and references",
        "Never truncate or summarize user prompts in log files"
      ]
    }
  ]
}
