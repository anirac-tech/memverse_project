{
  "rules": [
    "Project is a scripture memory flutter app which is a mobile front-end for memverse.com",
    "Use riverpod for state management and existing hooks such as useTextEditingController wherever possible",
    "Use techniques from codewithandrea.com",
    "Make sure and localize all user-facing strings in English and Spanish",
    "Try to Get 100% test coverage for widget and integration tests - use //ignore as a last resort",
    "Try to use bdd testing with gherkin with https://pub.dev/packages/bdd_widget_test whenever possible ",
    "Exclude generated code and 'l10n' directory from test coverage similar to flutter test --coverage;lcov --remove coverage/lcov.info 'lib/l10n' '**/*.g.dart' -o coverage/new_lcov.info ;genhtml coverage/new_lcov.info -o coverage/html\n\n",
    "Always run dart format for 100 characters",
    "Please insert all appropriate trailing commas so no lint errors",
    "Always run flutter analyze and fix all issues",
    "always run dart fix --apply",
    "Always make sure tests pass at the end",
    "always remove unused imports",
    "always remove unused local variables",
    "As a rule of thumb - if a widget is over 10 lines long give it its own file",
    "use feature based directory structure",
    "Always run ./scripts/check_before_commit.sh before committing code to ensure all checks pass",
    {
      "filePathMatches": "*.feature",
      "rules": [
        "Use gherkin syntax/templates from https://pub.dev/packages/bdd_widget_test ie Then I see {'1'} text"
      ]
    },
    {
      "filePathMatches": "**/*_ai_prompts_and_responses.log",
      "rules": [
        "Name log files following branch naming pattern: if branch is named like 'MEM-44-feature-name', use 'MEM-44_ai_prompts_and_responses.log'",
        "If branch name doesn't match a ticket pattern, use date format like 'April08_2025_ai_prompts_and_responses.log'",
        "When recording user queries and responses, always include accurate timestamps using system time",
        "For each user query, use the format: **User Query** (yyyy-MM-dd HH:mm:ss): [query text]",
        "Calculate and record accurate durations for tasks by using the actual start and end times",
        "When recording timestamps, use `date '+%Y-%m-%d %H:%M:%S'` format for consistency",
        "Ensure total time in summary reflects actual elapsed time between first and last interactions"
      ]
    },
    {
      "filePathMatches": "**/*_ai_prompts.log",
      "rules": [
        "Name log files following branch naming pattern: if branch is named like 'MEM-59-feature-name', use 'MEM-59_ai_prompts.log'",
        "If branch name doesn't match a ticket pattern, use date format like 'April08_2025_ai_prompts.log'",
        "When creating a new log file, determine if there is already a log file for the current branch",
        "If no log file exists for the current branch, create one using the branch name prefix",
        "For each user query, record the timestamp in the format: **User Query** (yyyy-MM-dd HH:mm:ss): [query text]",
        "Calculate and record accurate durations for tasks using the actual start and end times",
        "Include a summary section with total time and key accomplishments"
      ]
    },
    {
      "beforeCommit": true,
      "command": "./scripts/check_before_commit.sh",
      "name": "Run pre-commit checks"
    },
    {
      "onSessionStart": true,
      "command": "BRANCH_NAME=$(git branch --show-current); TICKET=$(echo $BRANCH_NAME | grep -o 'MEM-[0-9]\\+' || echo \"$(date '+%B%d_%Y')\"); LOG_FILE=\"${TICKET}_ai_prompts.log\"; if [ ! -f \"$LOG_FILE\" ]; then find . -maxdepth 1 -name \"*_ai_prompts.log\" -not -name \"$LOG_FILE\" -delete; fi; touch \"$LOG_FILE\"; git add -f \"$LOG_FILE\" 2>/dev/null || true",
      "name": "Create AI log file based on branch name, delete old ones, and add to git"
    },
    {
      "beforeCommit": true,
      "command": "LOG_FILES=$(find . -maxdepth 1 -name '*_ai_prompts*.log'); if [ ! -z \"$LOG_FILES\" ]; then git add -f $LOG_FILES 2>/dev/null || true; fi",
      "name": "Add AI log files to git before committing"
    }
  ]
}